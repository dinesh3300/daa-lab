#include <stdio.h>
#include <stdlib.h>

void combinationUtil(int arr[], int n, int target, int start, int path[], int pathSize) {
    if (target == 0) {
        for (int i = 0; i < pathSize; i++)
            printf("%d ", path[i]);
        printf("\n");
        return;
    }
    for (int i = start; i < n; i++) {
        if (target >= arr[i]) {
            path[pathSize] = arr[i];
            combinationUtil(arr, n, target - arr[i], i, path, pathSize + 1);
        }
    }
}

void combinationSum(int arr[], int n, int target) {
    int* path = (int*)malloc(target * sizeof(int));
    combinationUtil(arr, n, target, 0, path, 0);
    free(path);
}

int main() {
    int arr[] = {2, 3, 6, 7};
    int target = 7;
    int n = sizeof(arr) / sizeof(arr[0]);
    combinationSum(arr, n, target);
    return 0;
}
