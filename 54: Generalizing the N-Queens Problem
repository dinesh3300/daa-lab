#include <stdio.h>
#include <stdbool.h>

#define MAX 10

int board[MAX][MAX];

bool isSafe(int row, int col, int N) {
    for (int i = 0; i < col; i++)
        if (board[row][i])
            return false;

    for (int i = row, j = col; i >= 0 && j >= 0; i--, j--)
        if (board[i][j])
            return false;

    for (int i = row, j = col; j >= 0 && i < N; i++, j--)
        if (board[i][j])
            return false;

    return true;
}

bool solveNQUtil(int N, int col) {
    if (col >= N)
        return true;

    for (int i = 0; i < N; i++) {
        if (isSafe(i, col, N)) {
            board[i][col] = 1;

            if (solveNQUtil(N, col + 1))
                return true;

            board[i][col] = 0;
        }
    }
    return false;
}

void solveNQ(int N) {
    if (solveNQUtil(N, 0) == false) {
        printf("Solution does not exist\n");
        return;
    }
    printf("Solution exists:\n");
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++)
            printf(" %d ", board[i][j]);
        printf("\n");
    }
}

int main() {
    // Example 1: 8x10 Board
    printf("8x10 Board:\n");
    solveNQ(8);

    // Example 2: 5x5 Board with Obstacles
    printf("5x5 Board with Obstacles:\n");
    board[2][2] = 1; // Obstacle
    board[4][4] = 1; // Obstacle
    solveNQ(5);

    // Example 3: 6x6 Board with Restricted Positions
    printf("6x6 Board with Restricted Positions:\n");
    solveNQ(6);
    
    return 0;
}
