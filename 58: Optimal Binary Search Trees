#include <stdio.h>

int binarySearch(int arr[], int size, int key) {
    int left = 0;
    int right = size - 1;
    int mid;

    while (left <= right) {
        mid = left + (right - left) / 2;

        if (arr[mid] == key) {
            return mid; // Element found
        }
        if (arr[mid] < key) {
            left = mid + 1; // Search in the right half
        } else {
            right = mid - 1; // Search in the left half
        }
    }
    return -1; // Element not found
}

int main() {
    int arr1[] = {3, 9, 14, 19, 25, 31, 42, 47, 53};
    int size1 = sizeof(arr1) / sizeof(arr1[0]);
    int key1 = 31;
    int result1 = binarySearch(arr1, size1, key1);
    printf("Output: %d\n", result1); // Output: 5

    int arr2[] = {13, 19, 24, 29, 35, 41, 42};
    int size2 = sizeof(arr2) / sizeof(arr2[0]);
    int key2 = 42;
    int result2 = binarySearch(arr2, size2, key2);
    printf("Output: %d\n", result2); // Output: 6

    int arr3[] = {20, 40, 60, 80, 100, 120};
    int size3 = sizeof(arr3) / sizeof(arr3[0]);
    int key3 = 60;
    int result3 = binarySearch(arr3, size3, key3);
    printf("Output: %d\n", result3); // Output: 2

    return 0;
}
