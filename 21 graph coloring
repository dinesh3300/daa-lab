#include <stdio.h>
#include <stdbool.h>

#define V 4

bool isSafe(int graph[V][V], int color[], int v, int c) {
    for (int i = 0; i < V; i++) {
        if (graph[v][i] && color[i] == c)
            return false;
    }
    return true;
}

bool graphColoringUtil(int graph[V][V], int m, int color[], int v) {
    if (v == V)
        return true;

    for (int c = 1; c <= m; c++) {
        if (isSafe(graph, color, v, c)) {
            color[v] = c;
            if (graphColoringUtil(graph, m, color, v + 1))
                return true;
            color[v] = 0;
        }
    }
    return false;
}

int graphColoring(int graph[V][V], int m) {
    int color[V];
    for (int i = 0; i < V; i++)
        color[i] = 0;

    if (graphColoringUtil(graph, m, color, 0) == false)
        return 0;

    return 1;
}

int main() {
    int graph1[V][V] = { {0, 1, 1, 1},
                         {1, 0, 1, 1},
                         {1, 1, 0, 1},
                         {1, 1, 1, 0} };
    int m = 3;

    if (graphColoring(graph1, m))
        printf("Solution exists with %d colors\n", m);
    else
        printf("Solution does not exist with %d colors\n", m);

    return 0;
}
